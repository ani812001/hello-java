package learning;

public class Factorial {
    public static void main(String[] args) {
        Factorial instance1 = new Factorial();
        Factorial instance2 = new Factorial();
        System.out.println(new Factorial().Factorial(3,1 ) );


    }
    static int num,i;
    static long Factorial(int num, int i)
    {
        long x=1;
        while (i <= num) {
            x *= i;
            i++;
        }
        return x;
    }

    static class ReverseLinkedList {
        public static void main(String[] args)
        {
            ReverseLinkedList list = new ReverseLinkedList();
            list.head = new Node(85);
            list.head.next = new Node(15);
            list.head.next.next = new Node(4);
            list.head.next.next.next = new Node(20);

            System.out.println("Given linked list");
            list.printList(head);
            head = list.reverse(head);
            System.out.println("");
            System.out.println("Reversed linked list ");
            list.printList(head);
        }

        static Node head;

        static class Node {

            int data;
            Node next;

            Node(int d)
            {
                data = d;
                next = null;
            }
        }

        /* Function to reverse the linked list */
        Node reverse(Node node)
        {
            Node prev = null;
            Node current = node;
            Node next = null;
            while (current != null) {
                next = current.next;
                current.next = prev;
                prev = current;
                current = next;
            }
            node = prev;
            return node;
        }

        // prints content of double linked list
        void printList(Node node)
        {
            while (node != null) {
                System.out.print(node.data + " ");
                node = node.next;
            }
        }

    }
}
